name: 更新 VPS的CIDR

on:
  schedule:
      - cron: "0 4,16 * * *"  # 每天4点和16点运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  download-and-commit:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境上运行

    steps:
      # 检出仓库代码
      - name: 检出仓库代码
        uses: actions/checkout@v3

      # 设置 Python 环境
      - name: 设置 Python 环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # 使用最新的 Python 3 版本

      # 安装所需库
      - name: 安装所需库
        run: |
          pip install requests beautifulsoup4

      # 下载并处理文件
      - name: 下载并处理文件
        run: |
          python 获取VPS的CIDR.py  # 调用你的 Python 脚本
          ls -l  # 列出当前目录文件，检查VPS_CIDR_4.txt和VPS_CIDR_6.txt是否生成
          cat VPS_CIDR_4.txt  # 查看IPv4的CIDR文件内容
          cat VPS_CIDR_6.txt  # 查看IPv6的CIDR文件内容

      # 检查是否有更改
      - name: 检查是否有更改
        run: |
          git add VPS_CIDR_4.txt VPS_CIDR_6.txt
          if git diff --cached --quiet; then
            echo "没有需要提交的更改"
            exit 0
          fi

      # 提交并推送更改
      - name: 提交并推送更改
        if: success()  # 仅在上一步成功时运行
        run: |
          git config --local user.email "action@github.com"  # 配置 Git 用户邮箱
          git config --local user.name "GitHub Action"  # 配置 Git 用户名
          git commit -m "Downloaded and processed files on $(date '+%Y/%m/%d %H:%M:%S')" || echo "没有需要提交的更改，跳过提交。"  # 提交更改
          git pull --rebase  # 拉取远程仓库最新的更改并合并
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git  # 设置远程仓库 URL
          git push || echo "没有需要推送的更改，跳过推送。"  # 推送更改到远程仓库
